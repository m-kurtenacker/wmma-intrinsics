enum AddrMode {
    RowMayor,
    ColMayor
}

struct Tensor {
    data : &mut [f16],
    x_dim : i32,
    y_dim : i32,
    addr_mode : AddrMode,
    stride : i32 //row to row offset for this matrix.
}

struct Tensor_f32 {
    data : &mut [f32],
    x_dim : i32,
    y_dim : i32,
    addr_mode : AddrMode,
    stride : i32 //row to row offset for this matrix.
}

fn @addr_tensor (x : i32, y : i32, t : Tensor) = match t.addr_mode {
    AddrMode::RowMayor => x + y * t.stride,
    AddrMode::ColMayor => x * t.stride + y
};

fn @sub_tensor(t : Tensor, x0 : i32, y0 : i32, xs : i32, ys : i32) =
    Tensor {data = bitcast [&mut [f16]](&t.data(addr_tensor(x0, y0, t))),
             x_dim = xs,
             y_dim = ys,
             addr_mode = t.addr_mode,
             stride = t.stride
             };
