enum AddrMode {
    RowMayor,
    ColMayor
}

struct Tensor[T] {
    data : &mut [T],
    x_dim : i32,
    y_dim : i32,
    addr_mode : AddrMode,
    stride : i32 //row to row offset for this matrix.
}

fn @addr_tensor[T] (x : i32, y : i32, t : Tensor[T]) = match t.addr_mode {
    AddrMode::RowMayor => x + y * t.stride,
    AddrMode::ColMayor => x * t.stride + y
};

fn @sub_tensor[T](t : Tensor[T], x0 : i32, y0 : i32, xs : i32, ys : i32) =
    Tensor[T] {data = bitcast [&mut [T]](&t.data(addr_tensor[T](x0, y0, t))),
                x_dim = xs,
                y_dim = ys,
                addr_mode = t.addr_mode,
                stride = t.stride
              };
